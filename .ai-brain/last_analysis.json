{
  "timestamp": "2025-07-20T20:32:23.284783",
  "target_file": "python/ai_helpers_new/workflow_manager.py",
  "analysis_results": {
    "file": "python/ai_helpers_new/workflow_manager.py",
    "methods": [
      {
        "name": "__init__",
        "line": 20,
        "signature": "def __init__(self, project_path: str = \".\"):"
      },
      {
        "name": "_ensure_directories",
        "line": 37,
        "signature": "def _ensure_directories(self):"
      },
      {
        "name": "_load_workflow",
        "line": 43,
        "signature": "def _load_workflow(self) -> Dict[str, Any]:"
      },
      {
        "name": "_create_default_workflow",
        "line": 55,
        "signature": "def _create_default_workflow(self) -> Dict[str, Any]:"
      },
      {
        "name": "save_workflow",
        "line": 70,
        "signature": "def save_workflow(self) -> Dict[str, Any]:"
      },
      {
        "name": "add_task",
        "line": 80,
        "signature": "def add_task(self, name: str, description: str = \"\") -> Dict[str, Any]:"
      },
      {
        "name": "update_task",
        "line": 103,
        "signature": "def update_task(self, task_id: str, **updates) -> Dict[str, Any]:"
      },
      {
        "name": "get_current_task",
        "line": 122,
        "signature": "def get_current_task(self) -> Optional[Dict[str, Any]]:"
      },
      {
        "name": "list_tasks",
        "line": 132,
        "signature": "def list_tasks(self, status: Optional[str] = None) -> List[Dict[str, Any]]:"
      },
      {
        "name": "_add_history",
        "line": 139,
        "signature": "def _add_history(self, action: str, data: Dict[str, Any]):"
      },
      {
        "name": "_handle_task_command",
        "line": 167,
        "signature": "def _handle_task_command(self, args: list) -> Dict[str, Any]:"
      },
      {
        "name": "wf_command",
        "line": 210,
        "signature": "def wf_command(self, command: str) -> Dict[str, Any]:"
      },
      {
        "name": "_show_help",
        "line": 237,
        "signature": "def _show_help(self) -> str:"
      },
      {
        "name": "_show_status",
        "line": 249,
        "signature": "def _show_status(self) -> str:"
      },
      {
        "name": "get_workflow_manager",
        "line": 264,
        "signature": "def get_workflow_manager(project_path: str = \".\") -> WorkflowManager:"
      },
      {
        "name": "wf",
        "line": 272,
        "signature": "def wf(command: str) -> str:"
      }
    ],
    "total_lines": 276
  },
  "errors": [],
  "summary": {
    "files_analyzed": 1,
    "methods_found": 16,
    "errors_count": 0
  }
}