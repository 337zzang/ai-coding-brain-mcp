#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
🧠 AI Coding Brain - 극단 간소화 버전 v5.0
==========================================

핵심 기능만:
- Claude Desktop 설정에서 경로 읽기
- /flow 프로젝트명으로 전환
- 메모리 우선, 없으면 프로젝트 루트

작성일: 2025-06-14
"""

import os
import json
import logging
from pathlib import Path
from typing import Dict, Any, Optional

# 로깅 설정
logging.basicConfig(level=logging.INFO, format='[%(levelname)s] %(message)s')
logger = logging.getLogger(__name__)

# Context Manager 임포트
try:
    from context_manager import initialize_context, save_context
    CONTEXT_MANAGER_AVAILABLE = True
    logger.info("✅ Context Manager 로드 완료")
except ImportError:
    CONTEXT_MANAGER_AVAILABLE = False
    logger.error("❌ Context Manager 로드 실패")

# 글로벌 상태
class GlobalState:
    def __init__(self):
        self.current_project = None
        self.project_path = None
        self.context = None

_global_state = GlobalState()

def get_paths_from_config() -> dict:
    """Claude Desktop 설정에서 경로 가져오기"""
    config_path = os.path.expanduser("~/AppData/Roaming/Claude/claude_desktop_config.json")
    paths = {
        'project_root': Path.home() / "Desktop",
        'memory_root': Path.home() / "Desktop" / "memory"
    }
    
    if os.path.exists(config_path):
        try:
            with open(config_path, 'r', encoding='utf-8') as f:
                config = json.load(f)
            
            mcp_servers = config.get('mcpServers', {})
            for server_name, server_config in mcp_servers.items():
                if 'ai-coding-brain' in server_name.lower():
                    env = server_config.get('env', {})
                    if 'PROJECT_ROOT' in env:
                        paths['project_root'] = Path(env['PROJECT_ROOT'])
                    if 'MEMORY_BANK_ROOT' in env:
                        paths['memory_root'] = Path(env['MEMORY_BANK_ROOT'])
                    break
        except Exception as e:
            logger.error(f"설정 로드 실패: {e}")
    
    return paths

def cmd_flow(project_name: str = None) -> None:
    """/flow 명령어 - 프로젝트 전환"""
    global _global_state
    
    if not project_name:
        # 현재 상태 표시
        if _global_state.current_project:
            print(f"\n🔥 현재 프로젝트: {_global_state.current_project}")
            print(f"📁 경로: {_global_state.project_path}")
        else:
            print("\n⚠️ 프로젝트가 선택되지 않았습니다")
            print("사용법: /flow [프로젝트명]")
        return
    
    # 이전 컨텍스트 저장
    if _global_state.context and CONTEXT_MANAGER_AVAILABLE:
        save_context()
    
    # 경로 가져오기
    paths = get_paths_from_config()
    
    # 메모리 루트 우선 확인
    project_path = paths['memory_root'] / project_name
    location = 'memory'
    
    if not project_path.exists():
        # 프로젝트 루트 확인
        project_path = paths['project_root'] / project_name
        location = 'project'
        
        if not project_path.exists():
            print(f"\n❌ 프로젝트 '{project_name}'를 찾을 수 없습니다")
            print(f"   • 메모리: {paths['memory_root'] / project_name}")
            print(f"   • 프로젝트: {paths['project_root'] / project_name}")
            return
    
    # 프로젝트 전환
    _global_state.current_project = project_name
    _global_state.project_path = str(project_path)
    
    os.chdir(project_path)
    
    # Context 초기화
    if CONTEXT_MANAGER_AVAILABLE:
        _global_state.context = initialize_context(str(project_path), project_name)
        print(f"\n✅ 프로젝트 '{project_name}'로 전환 완료!")
        print(f"📁 경로: {project_path} ({location}_root)")
    else:
        _global_state.context = None
        print(f"\n⚠️ Context Manager 없이 '{project_name}'로 전환")

# 메인 진입점
def process_command(command: str, *args):
    """명령어 처리"""
    if command == '/flow':
        return cmd_flow(args[0] if args else None)
    return f"❌ 알 수 없는 명령어: {command}"

# 초기화
logger.info("🧠 AI Coding Brain v5.0 (극단 간소화) 준비 완료!")
