{
  "code_changes": "\n## 1️⃣ FlowManagerUnified 코드 변경 (최소화)\n\n### 상태값 추가\n```python\n# Task 상태 확장 (기존 + 신규)\nTASK_STATES = {\n    'todo': '⏳',        # 대기 중\n    'planning': '📐',    # 설계 중 (신규)\n    'in_progress': '🔄', # 진행 중\n    'reviewing': '🔍',   # 검토 중 (신규)\n    'completed': '✅',   # 완료\n    'approved': '🏆',    # 승인됨 (신규)\n    'skipped': '⏭️',    # 건너뜀\n    'error': '❌'        # 오류\n}\n```\n\n### update_task_status 메서드만 수정\n- 상태 전환 시 유효성 검사 추가\n- 상태 변경 이벤트 발생\n",
  "user_preference_addition": "\n## 2️⃣ 유저프리퍼런스에 추가할 Task 워크플로우 가이드\n\n### 🔄 Task 상태 전환 시 AI 행동 가이드\n\n#### 1. /start 명령 시 (todo → planning)\n```markdown\nTask가 'planning' 상태로 변경되었습니다.\n\n## 📐 Task 설계서 작성\n아래 템플릿에 따라 상세 설계를 작성해주세요:\n\n### 🎯 목표 (Goal)\n- 이 Task로 달성하고자 하는 구체적인 목표는 무엇인가요?\n\n### 🔧 접근 방법 (Approach)  \n- 어떤 방법과 도구를 사용할 예정인가요?\n\n### 📋 실행 단계 (Steps)\n1. [첫 번째 단계]\n2. [두 번째 단계]\n3. [세 번째 단계]\n\n### 📊 예상 결과물 (Expected Results)\n- 어떤 산출물이 나올 예정인가요?\n\n### ⚠️ 위험 요소 (Risks)\n- 예상되는 문제점과 대응 방안은?\n\n### ⏱️ 예상 시간\n- 각 단계별 소요 시간 추정\n\n**✅ 이 설계대로 진행하시겠습니까?**\n```\n\n#### 2. 설계 승인 시 (planning → in_progress)\n- 설계 내용을 context.plan에 저장\n- \"Task를 시작합니다. 설계에 따라 작업을 진행하세요.\"\n\n#### 3. /complete 명령 시 (in_progress → reviewing)\n```markdown\nTask가 'reviewing' 상태로 변경되었습니다.\n\n## 📊 Task 완료 보고서 작성\n자동으로 생성된 보고서를 검토해주세요:\n\n### 📋 작업 내역\n[context.actions 기반 자동 생성]\n\n### 📈 달성 결과\n[context.results 기반 자동 생성]\n\n### 📁 파일 작업\n[context.files 기반 자동 생성]\n\n### 💡 개선 사항\n- 발견된 문제점과 개선 방안\n\n**✅ 이 결과를 승인하시겠습니까?**\n```\n\n#### 4. 결과 승인 시 (reviewing → completed/approved)\n- 보고서를 context.report에 저장\n- \"Task가 성공적으로 완료되었습니다!\"\n\n### 🚨 상태별 자동 체크\n- planning 상태: 설계가 작성되었는지 확인\n- in_progress 상태: 정기적으로 진행 상황 확인\n- reviewing 상태: 보고서가 작성되었는지 확인\n",
  "implementation_strategy": "\n## 3️⃣ 구현 전략\n\n### Phase 1: 코드 수정 (최소화)\n1. TASK_STATES에 신규 상태 추가\n2. 상태 전환 유효성 검사 로직 추가\n\n### Phase 2: 유저프리퍼런스 업데이트\n1. Task 상태별 AI 행동 가이드 추가\n2. 템플릿과 승인 절차 정의\n\n### Phase 3: AI 행동 자동화\n- AI가 Task 상태를 감지하고 적절한 가이드 제공\n- 사용자 응답에 따라 다음 단계 진행\n\n### 장점\n1. **코드 변경 최소화**: 상태값과 검증 로직만 추가\n2. **유연성**: 유저프리퍼런스 수정으로 워크플로우 변경 가능\n3. **확장성**: 새로운 상태나 절차 추가 용이\n4. **AI 활용**: AI가 상황에 맞는 가이드 자동 제공\n",
  "benefits": [
    "코드 변경 최소화",
    "유저프리퍼런스로 유연한 워크플로우 관리",
    "AI가 각 상태에서 적절한 가이드 제공",
    "승인 절차로 품질 보증"
  ]
}