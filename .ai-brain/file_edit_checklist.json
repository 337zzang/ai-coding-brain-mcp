{
  "checklist": "\n📋 파일 수정 전 Extended Thinking 체크리스트:\n\n□ 수정 범위가 너무 크지 않은가? (20줄 이하 권장)\n□ 백업을 만들었는가?\n□ 수정 후 어떻게 검증할 것인가?\n□ 실패 시 복구 방법은?\n\n🔄 수정 프로세스:\n\n1️⃣ 수정 단위 결정\n   THINK: \"이걸 더 작게 나눌 수 있나?\"\n   - 메서드 전체 → 메서드 내부 블록으로\n   - 클래스 전체 → 메서드 하나씩\n   - 여러 줄 → 한 줄씩\n\n2️⃣ 각 수정 후 즉시 검증\n   ```python\n   # 수정\n   h.replace(file, old, new)\n\n   # 즉시 검증\n   content = h.read(file)['data']\n   try:\n       ast.parse(content)\n       compile(content, file, 'exec')\n       print(\"✅ 검증 통과\")\n   except Exception as e:\n       print(f\"❌ 오류: {e}\")\n       # 즉시 롤백\n   ```\n\n3️⃣ 점진적 진행\n   수정 1 → 검증 → ✅ → 수정 2 → 검증 → ✅ → ...\n\n4️⃣ 실패 시 대응\n   - 즉시 중단\n   - 원인 분석\n   - 더 작은 단위로 재시도\n\n🎯 핵심 원칙:\n\"느려도 확실하게\" > \"빠르지만 위험하게\"\n\n💭 항상 자문하기:\n- \"이 수정이 실패하면?\"\n- \"더 안전한 방법은?\"\n- \"지금 검증 가능한가?\"\n",
  "principles": [
    "작은 단위로 수정",
    "즉시 검증",
    "실패 시 즉시 롤백",
    "백업 필수"
  ],
  "created_at": "2025-07-20T20:38:45.626228"
}