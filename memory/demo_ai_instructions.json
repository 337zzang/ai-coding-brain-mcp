{
  "pending": [
    {
      "instruction_id": "INS_20250712_215328_demo",
      "created_at": "2025-07-12T21:53:28.924127",
      "event_type": "task_completed",
      "context": {
        "task_title": "양방향 통신 시스템 구현",
        "plan_name": "AI 테스트 플랜",
        "progress": 100
      },
      "ai_actions_required": [
        {
          "action": "celebrate_completion",
          "description": "작업 완료 축하",
          "params": {},
          "mcp_commands": [
            "print('\\n🎉 축하합니다! 양방향 통신 시스템이 구현되었습니다!')",
            "print('이제 워크플로우 이벤트가 AI 지시로 변환됩니다.')"
          ]
        },
        {
          "action": "git_commit_and_push",
          "description": "변경사항을 Git에 커밋하고 푸시",
          "params": {
            "message": "feat: 양방향 통신 시스템 구현 완료"
          },
          "mcp_commands": [
            "helpers.git_add('.')",
            "helpers.git_commit('feat: 양방향 통신 시스템 구현 완료')",
            "helpers.git_push()"
          ]
        },
        {
          "action": "generate_documentation",
          "description": "시스템 문서 생성",
          "params": {},
          "mcp_commands": [
            "helpers.workflow('/build')",
            "print('📄 문서가 생성되었습니다.')"
          ]
        },
        {
          "action": "create_usage_guide",
          "description": "사용 가이드 파일 생성",
          "params": {},
          "mcp_commands": [
            "content = '''# AI 양방향 통신 시스템 사용 가이드\\n\\n## 개요\\n워크플로우 이벤트를 AI가 읽고 실행할 수 있는 지시서로 변환\\n\\n## 주요 기능\\n1. 태스크 완료 → Git 커밋/푸시\\n2. 에러 발생 → 자동 해결 시도\\n3. 플랜 완료 → 문서화 및 보고서\\n'''",
            "helpers.create_file('docs/ai_instruction_guide.md', content)",
            "print('📖 사용 가이드가 생성되었습니다.')"
          ]
        }
      ],
      "priority": "immediate",
      "deadline": "immediate",
      "status": "pending"
    }
  ],
  "completed": [],
  "failed": []
}